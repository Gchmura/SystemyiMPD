Version: 2.0

#########################
# Alternatives Section
#

Alternatives: &alternatives
# Here, we list all the alternatives, together with their attributes. 
# We can use these attributes later in the file when defining 
# preferenceFunctions. The attributes can be quantitative or 
# qualitative.
  Huawei P20:
    cena: 2699
    kolor: niebieski
    wyswietlacz: 58
    ram: 4
    pamiec: 128
    aparat: 20
  Huawei Mate 10 Lite:
    cena: 1299
    kolor: bialy
    wyswietlacz: 59
    ram: 4
    pamiec: 64
    aparat: 16
  Huawei P20 Lite:
    cena: 1599
    kolor: zolty
    wyswietlacz: 58
    ram: 4
    pamiec: 64
    aparat: 16
  Huawei P20 Pro:
    cena: 3499
    kolor: czarny
    wyswietlacz: 61
    ram: 6
    pamiec: 128
    aparat: 40
  Huawei P9 Lite:
    cena: 679
    kolor: pomaranczowy
    wyswietlacz: 52
    ram: 3
    pamiec: 16
    aparat: 12
  Huawei P10 Lite:
    cena: 899
    kolor: szary
    wyswietlacz: 52
    ram: 3
    pamiec: 32
    aparat: 12
  Huawei P20 Lite Blue:
    cena: 1598
    kolor: niebieski
    wyswietlacz: 58
    ram: 4
    pamiec: 64
    aparat: 16
  Huawei P Smart:
    cena: 979
    kolor: szaro-czerwony
    wyswietlacz: 56
    ram: 3
    pamiec: 32
    aparat: 13
  Huawei P9 Lite Mini:
    cena: 519
    kolor: pomaranczowy
    wyswietlacz: 50
    ram: 2
    pamiec: 16
    aparat: 13
  Huawei P10:
    cena: 1699
    kolor: bialo-niebieski
    wyswietlacz: 51
    ram: 4
    pamiec: 64
    aparat: 20
#
# End of Alternatives Section
#####################################

#####################################
# Goal Section
#


Goal:
# The goal spans a tree of criteria and the alternatives
  name: Zakup smartfona
  description: >
    This is a classic single decision maker problem. It models
    the situation facing by a family that wants to buy a new fridge.
 
  decision-makers:
    - Ojciec: 0.45
    - Matka: 0.45
    - Dziecko: 0.1
  preferences:
    # preferences are typically defined pairwise
    # 1 means: A is equal to B
    # 9 means: A is highly preferrable to B
    # 1/9 means: B is highly preferrable to A
    Ojciec:
      pairwise:
        - [Wydajnosc, Jakosc, 3]
        - [Wydajnosc, Styl, 9]
        - [Wydajnosc, Cena, 5]
        - [Jakosc, Styl, 7]
        - [Jakosc, Cena, 1]
        - [Styl, Cena, 1/9]
    Matka:
      pairwise:
        - [Wydajnosc, Jakosc, 2]
        - [Wydajnosc, Styl, 6]
        - [Wydajnosc, Cena, 1/3]
        - [Jakosc, Styl, 4]
        - [Jakosc, Cena, 1/6]
        - [Styl, Cena, 1/7]
    Dziecko:
      pairwise:
        - [Wydajnosc, Jakosc, 1/2]
        - [Wydajnosc, Styl, 1/6]
        - [Wydajnosc, Cena, 1/2]
        - [Jakosc, Styl, 1/6]
        - [Jakosc, Cena, 1]
        - [Styl, Cena, 6]
  children: 
    Wydajnosc: 
      preferences:
        Ojciec:       
            pairwiseFunction: 
                function(a1, a2) min(9, max(1/9, a2$ram/a1$ram))
        Matka:   
            scoreFunction:
                function(a) -a$ram
        Dziecko:       
            scoreFunction:
                function(a) -a$ram
      children: *alternatives
    Jakosc: 
      preferences:
        Ojciec:
          # Komentarz - ocena jakosci na podstawie pojemnosci wyznaczonej w litrach
          scoreFunction:
              function(a) a$wyswietlacz
        Matka:
          # Komentarz - metoda porownywania (l) w parach
          pairwiseFunction: 
              function(a1, a2) min(9, max(1/9, a2$wyswietlacz/a1$wyswietlacz))
        Dziecko:
          # Komentarz - ocena jakosci
          scoreFunction:
              function(a) a$wyswietlacz
      children: *alternatives
    Styl: 
      preferences:
        Ojciec:
          # Komentarz - ocena stylu na podstawie koloru; brane kolory pod uwage: zielono-szary, szaro-niebieski, szary, szaro-czerwony, srebrny, czarny (jakiekolwiek inne kolory oceniamy na 4)
          pairwiseFunction: >
            PreferencjeStylu <- function(a1, a2) {
              if (a1$kolor == "zielono-szary") wynik_stylu_dla_a1 <- 1
              else if (a1$kolor == "szaro-niebieski") wynik_stylu_dla_a1 <- 6
              else if (a1$kolor == "szary") wynik_stylu_dla_a1 <- 7
              else if (a1$kolor == "szaro-czerwony") wynik_stylu_dla_a1 <- 5
              else if (a1$kolor == "srebrny") wynik_stylu_dla_a1 <- 8
              else if (a1$kolor == "czarny") wynik_stylu_dla_a1 <- 3
              else wynik_stylu_dla_a1 <- 4
              if (a2$kolor == "zielono-szary") wynik_stylu_dla_a2 <- 1
              else if (a2$kolor == "szaro-niebieski") wynik_stylu_dla_a2 <- 6
              else if (a2$kolor == "szary") wynik_stylu_dla_a2 <- 7
              else if (a2$kolor == "szaro-czerwony") wynik_stylu_dla_a2 <- 5
              else if (a2$kolor == "srebrny") wynik_stylu_dla_a2 <- 8
              else if (a2$kolor == "czarny") wynik_stylu_dla_a2 <- 3
              else wynik_stylu_dla_a2 <- 4
              if (wynik_stylu_dla_a1 < wynik_stylu_dla_a2) return (wynik_stylu_dla_a2/wynik_stylu_dla_a1)
              return (wynik_stylu_dla_a1/wynik_stylu_dla_a2)
              }
        Matka:
          # Komentarz - ocena stylu na podstawie koloru; brane kolory pod uwage: zielono-szary, szaro-niebieski, szary, szaro-czerwony, czerwono-bialy, bialo-niebieski, niebieski, niebiesko-zolty, srebrny, pomaranczowy, czarny (jakiekolwiek inne kolory oceniamy na 5)
          pairwiseFunction: >
            PreferencjeStylu <- function(a1, a2) {
              if (a1$kolor == "zielono-szary") wynik_stylu_dla_a1 <- 2
              else if (a1$kolor == "szaro-niebieski") wynik_stylu_dla_a1 <- 1
              else if (a1$kolor == "szary") wynik_stylu_dla_a1 <- 3
              else if (a1$kolor == "szaro-czerwony") wynik_stylu_dla_a1 <- 2
              else if (a1$kolor == "czerwono-bialy") wynik_stylu_dla_a1 <- 7
              else if (a1$kolor == "bialo-niebieski") wynik_stylu_dla_a1 <- 6
              else if (a1$kolor == "niebieski") wynik_stylu_dla_a1 <- 6
              else if (a1$kolor == "niebiesko-zolty") wynik_stylu_dla_a1 <- 8
              else if (a1$kolor == "srebrny") wynik_stylu_dla_a1 <- 4
              else if (a1$kolor == "pomaranczowy") wynik_stylu_dla_a1 <- 9
              else if (a1$kolor == "czarny") wynik_stylu_dla_a1 <- 3
              else wynik_stylu_dla_a1 <- 5
              if (a2$kolor == "zielono-szary") wynik_stylu_dla_a2 <- 2
              else if (a2$kolor == "szaro-niebieski") wynik_stylu_dla_a2 <- 1
              else if (a2$kolor == "szary") wynik_stylu_dla_a2 <- 3
              else if (a2$kolor == "szaro-czerwony") wynik_stylu_dla_a2 <- 2
              else if (a2$kolor == "czerwono-bialy") wynik_stylu_dla_a2 <- 7
              else if (a2$kolor == "bialo-niebieski") wynik_stylu_dla_a2 <- 6
              else if (a2$kolor == "niebieski") wynik_stylu_dla_a2 <- 6
              else if (a2$kolor == "niebiesko-zolty") wynik_stylu_dla_a2 <- 8
              else if (a2$kolor == "srebrny") wynik_stylu_dla_a2 <- 4
              else if (a2$kolor == "pomaranczowy") wynik_stylu_dla_a2 <- 9
              else if (a2$kolor == "czarny") wynik_stylu_dla_a2 <- 3
              else wynik_stylu_dla_a2 <- 5
              if (wynik_stylu_dla_a1 < wynik_stylu_dla_a2) return (wynik_stylu_dla_a2/wynik_stylu_dla_a1)
              return (wynik_stylu_dla_a1/wynik_stylu_dla_a2)
              }
        Dziecko:
          # Komentarz - ocena stylu na podstawie koloru; brane kolory pod uwage: zielono-szary, szaro-niebieski, szaro-czerwony, czerwono-bialy, bialo-niebieski, niebieski, niebiesko-zolty, srebrny, pomaranczowy (jakiekolwiek inne kolory oceniamy na 1)
          pairwiseFunction: >
            PreferencjeStylu <- function(a1, a2) {
              if (a1$kolor == "zielono-szary") wynik_stylu_dla_a1 <- 3
              else if (a1$kolor == "szaro-niebieski") wynik_stylu_dla_a1 <- 3
              else if (a1$kolor == "szaro-czerwony") wynik_stylu_dla_a1 <- 2
              else if (a1$kolor == "czerwono-bialy") wynik_stylu_dla_a1 <- 5
              else if (a1$kolor == "bialo-niebieski") wynik_stylu_dla_a1 <- 8
              else if (a1$kolor == "niebieski") wynik_stylu_dla_a1 <- 9
              else if (a1$kolor == "niebiesko-zolty") wynik_stylu_dla_a1 <- 7
              else if (a1$kolor == "srebrny") wynik_stylu_dla_a1 <- 4
              else if (a1$kolor == "pomaranczowy") wynik_stylu_dla_a1 <- 6
              else wynik_stylu_dla_a1 <- 1
              if (a2$kolor == "zielono-szary") wynik_stylu_dla_a2 <- 3
              else if (a2$kolor == "szaro-niebieski") wynik_stylu_dla_a2 <- 3
              else if (a2$kolor == "szaro-czerwony") wynik_stylu_dla_a2 <- 2
              else if (a2$kolor == "czerwono-bialy") wynik_stylu_dla_a2 <- 5
              else if (a2$kolor == "bialo-niebieski") wynik_stylu_dla_a2 <- 8
              else if (a2$kolor == "niebieski") wynik_stylu_dla_a2 <- 9
              else if (a2$kolor == "niebiesko-zolty") wynik_stylu_dla_a2 <- 7
              else if (a2$kolor == "srebrny") wynik_stylu_dla_a2 <- 4
              else if (a2$kolor == "pomaranczowy") wynik_stylu_dla_a2 <- 6
              else wynik_stylu_dla_a2 <- 1
              if (wynik_stylu_dla_a1 < wynik_stylu_dla_a2) return (wynik_stylu_dla_a2/wynik_stylu_dla_a1)
              return (wynik_stylu_dla_a1/wynik_stylu_dla_a2)
              }
      children: *alternatives
    Cena: 
      preferences:
        Ojciec:
          # Komentarz - ocena ceny
          scoreFunction:
              function(a) -a$cena
        Matka:
          # Komentarz - ocena ceny
          scoreFunction:
              function(a) -a$cena
        Dziecko:
          pairwiseFunction: 
              function(a1, a2) min(9, max(1/9, a2$cena/a1$cena))
      children: *alternatives

#
# End of Goal Section
#####################################